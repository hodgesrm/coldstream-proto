/*
 * Goldfin Invoice Processing API
 * Goldfin Invoice Analysis API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: rhodges@skylineresearch.comm
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.goldfin.front.invoice.api.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.goldfin.front.invoice.api.model.InvoiceItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.validation.constraints.*;

/**
 * Invoice content obtained from documentation interpretation
 */
@ApiModel(description = "Invoice content obtained from documentation interpretation")

public class Invoice   {
  @JsonProperty("identifier")
  private String identifier = null;

  @JsonProperty("effectiveDate")
  private Date effectiveDate = null;

  @JsonProperty("vendor")
  private String vendor = null;

  @JsonProperty("subtotalAmount")
  private BigDecimal subtotalAmount = null;

  @JsonProperty("tax")
  private BigDecimal tax = null;

  @JsonProperty("totalAmount")
  private BigDecimal totalAmount = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("items")
  private List<InvoiceItem> items = null;

  public Invoice identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * Invoice identifier
   * @return identifier
   **/
  @JsonProperty("identifier")
  @ApiModelProperty(value = "Invoice identifier")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public Invoice effectiveDate(Date effectiveDate) {
    this.effectiveDate = effectiveDate;
    return this;
  }

  /**
   * Invoice effective date
   * @return effectiveDate
   **/
  @JsonProperty("effectiveDate")
  @ApiModelProperty(value = "Invoice effective date")
  public Date getEffectiveDate() {
    return effectiveDate;
  }

  public void setEffectiveDate(Date effectiveDate) {
    this.effectiveDate = effectiveDate;
  }

  public Invoice vendor(String vendor) {
    this.vendor = vendor;
    return this;
  }

  /**
   * Vendor name
   * @return vendor
   **/
  @JsonProperty("vendor")
  @ApiModelProperty(value = "Vendor name")
  public String getVendor() {
    return vendor;
  }

  public void setVendor(String vendor) {
    this.vendor = vendor;
  }

  public Invoice subtotalAmount(BigDecimal subtotalAmount) {
    this.subtotalAmount = subtotalAmount;
    return this;
  }

  /**
   * Invoice subtotal amount
   * @return subtotalAmount
   **/
  @JsonProperty("subtotalAmount")
  @ApiModelProperty(value = "Invoice subtotal amount")
  public BigDecimal getSubtotalAmount() {
    return subtotalAmount;
  }

  public void setSubtotalAmount(BigDecimal subtotalAmount) {
    this.subtotalAmount = subtotalAmount;
  }

  public Invoice tax(BigDecimal tax) {
    this.tax = tax;
    return this;
  }

  /**
   * Invoice tax amount
   * @return tax
   **/
  @JsonProperty("tax")
  @ApiModelProperty(value = "Invoice tax amount")
  public BigDecimal getTax() {
    return tax;
  }

  public void setTax(BigDecimal tax) {
    this.tax = tax;
  }

  public Invoice totalAmount(BigDecimal totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

  /**
   * Invoice total (subtotal + tax)
   * @return totalAmount
   **/
  @JsonProperty("totalAmount")
  @ApiModelProperty(value = "Invoice total (subtotal + tax)")
  public BigDecimal getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(BigDecimal totalAmount) {
    this.totalAmount = totalAmount;
  }

  public Invoice currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Currency type
   * @return currency
   **/
  @JsonProperty("currency")
  @ApiModelProperty(value = "Currency type")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Invoice items(List<InvoiceItem> items) {
    this.items = items;
    return this;
  }

  public Invoice addItemsItem(InvoiceItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<InvoiceItem>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
   * Invoice items
   * @return items
   **/
  @JsonProperty("items")
  @ApiModelProperty(value = "Invoice items")
  public List<InvoiceItem> getItems() {
    return items;
  }

  public void setItems(List<InvoiceItem> items) {
    this.items = items;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Invoice invoice = (Invoice) o;
    return Objects.equals(this.identifier, invoice.identifier) &&
        Objects.equals(this.effectiveDate, invoice.effectiveDate) &&
        Objects.equals(this.vendor, invoice.vendor) &&
        Objects.equals(this.subtotalAmount, invoice.subtotalAmount) &&
        Objects.equals(this.tax, invoice.tax) &&
        Objects.equals(this.totalAmount, invoice.totalAmount) &&
        Objects.equals(this.currency, invoice.currency) &&
        Objects.equals(this.items, invoice.items);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifier, effectiveDate, vendor, subtotalAmount, tax, totalAmount, currency, items);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Invoice {\n");
    
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    subtotalAmount: ").append(toIndentedString(subtotalAmount)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

