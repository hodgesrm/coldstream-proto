---
swagger: "2.0"
info:
  description: "REST API for Goldfin Service Administration"
  version: "1.0.0"
  title: "Goldfin Service Admin API"
  termsOfService: "http://goldfin.io/terms/"
  contact:
    email: "info@goldfin.io"
host: "admin.goldfin.io"
basePath: "/api/v1"
tags:
- name: "security"
  description: "Session login and logout"
- name: "tenant"
  description: "Tenant management"
- name: "vendor"
  description: "Per-tenant vendor management"
- name: "invoice"
  description: "Per-tenant invoice management"
- name: "inventory"
  description: "Per-tenant inventory data"
schemes:
- "https"
security:
- APIKeyHeader: []
paths:
  /session:
    post:
      tags:
      - "security"
      summary: "Login to system"
      description: "Obtain API key using login credentials"
      operationId: "login_by_credentials"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Login credentials"
        required: true
        schema:
          $ref: "#/definitions/LoginCredentials"
      responses:
        200:
          description: "OK"
          headers:
            vnd-io-goldfin-auth:
              type: "string"
              description: "Session key, should be submitted on future requests to\
                \ show authorization"
        400:
          description: "Bad input"
          schema:
            $ref: "#/definitions/ApiResponse"
      security: []
      x-swagger-router-controller: "api.controllers.security_controller"
  /session/{token}:
    delete:
      tags:
      - "security"
      summary: "Logout from system"
      description: "Delete session, which is no longer usable after this call"
      operationId: "logout"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "path"
        description: "Session ID token"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.security_controller"
  /tenant:
    get:
      tags:
      - "tenant"
      summary: "List tenants"
      description: "Return a list of all tenants"
      operationId: "tenant_showall"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful query"
      x-swagger-router-controller: "api.controllers.tenant_controller"
    post:
      tags:
      - "tenant"
      summary: "Create a new tenant"
      description: "Upload a new tenant registration request."
      operationId: "tenant_create"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Tenant creation parameters"
        required: true
        schema:
          $ref: "#/definitions/TenantParameters"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Tenant"
        400:
          description: "Tenant creation failed"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "api.controllers.tenant_controller"
  /tenant/{id}:
    get:
      tags:
      - "tenant"
      summary: "Show a single tenant"
      description: "Return all information relative to a single tenant"
      operationId: "tenant_show"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Tenant ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Tenant"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.tenant_controller"
    put:
      tags:
      - "tenant"
      summary: "Update a tenant"
      description: "Update invoice description and tags. Changes to other fields are\
        \ ignored"
      operationId: "tenant_update"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Tenant ID"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Tenant parameters"
        required: false
        schema:
          $ref: "#/definitions/TenantParameters"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.tenant_controller"
    delete:
      tags:
      - "tenant"
      summary: "Delete a tenant"
      description: "Delete a single tenant"
      operationId: "tenant_delete"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Tenant ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.tenant_controller"
  /user:
    get:
      tags:
      - "tenant"
      summary: "List users"
      description: "Return a list of all users visible to current user"
      operationId: "user_showall"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful query"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
      x-swagger-router-controller: "api.controllers.tenant_controller"
    post:
      tags:
      - "tenant"
      summary: "Create a new user for a tenant"
      description: "Upload a new user registration request."
      operationId: "user_create"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User registration request parameters"
        required: true
        schema:
          $ref: "#/definitions/UserParameters"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "User creation failed"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "api.controllers.tenant_controller"
  /user/{id}:
    get:
      tags:
      - "tenant"
      summary: "Show a single user"
      description: "Return all information relative to a single user"
      operationId: "user_show"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Tenant"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.tenant_controller"
    put:
      tags:
      - "tenant"
      summary: "Update a user"
      description: "Update user description"
      operationId: "user_update"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User ID"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "User parameters"
        required: false
        schema:
          $ref: "#/definitions/UserParameters"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.tenant_controller"
    delete:
      tags:
      - "tenant"
      summary: "Delete a user"
      description: "Delete a user"
      operationId: "user_delete"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.tenant_controller"
  /user/{id}/password:
    put:
      tags:
      - "tenant"
      summary: "Update user password"
      description: "Sets a new user password"
      operationId: "user_update_password"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User ID"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Password change parameters"
        required: false
        schema:
          $ref: "#/definitions/UserPasswordParameters"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.tenant_controller"
  /vendor:
    get:
      tags:
      - "vendor"
      summary: "List vendors"
      description: "Return a list of all vendors"
      operationId: "vendor_showall"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful query"
      x-swagger-router-controller: "api.controllers.vendor_controller"
    post:
      tags:
      - "vendor"
      summary: "Create a new vendor"
      description: "Upload a new vendor definition.  Vendors are also created automatically\
        \ if a vendor invoice is processed."
      operationId: "vendor_create"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Vendor registration request parameters"
        required: true
        schema:
          $ref: "#/definitions/VendorParameters"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Vendor"
        400:
          description: "Vendor creation failed"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "api.controllers.vendor_controller"
  /vendor/{id}:
    get:
      tags:
      - "vendor"
      summary: "Show a single vendor"
      description: "Return all information relative to a single vendor"
      operationId: "vendor_show"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Vendor ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Vendor"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.vendor_controller"
    put:
      tags:
      - "vendor"
      summary: "Update a vendor"
      description: "Update vendor description."
      operationId: "vendor_update"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Vendor ID"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Vendor parameters"
        required: false
        schema:
          $ref: "#/definitions/VendorParameters"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.vendor_controller"
    delete:
      tags:
      - "vendor"
      summary: "Delete a vendor"
      description: "Delete a single vendor.  This can only be done if the vendor is\
        \ not attached to invoices or existing inventory."
      operationId: "vendor_delete"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "vendor ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
        400:
          description: "Invalid Request"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.vendor_controller"
  /invoice:
    get:
      tags:
      - "invoice"
      summary: "List invoices"
      description: "Return a list of all invoices"
      operationId: "invoice_show_all"
      produces:
      - "application/json"
      parameters:
      - name: "full"
        in: "query"
        description: "If true, return full invoices with all line items"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Successful query"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Invoice"
      x-swagger-router-controller: "api.controllers.invoice_controller"
  /invoice/{id}:
    get:
      tags:
      - "invoice"
      summary: "Show a single invoice"
      description: "Return all information relative to a single invoice"
      operationId: "invoice_show"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Invoice ID"
        required: true
        type: "string"
      - name: "full"
        in: "query"
        description: "If true, return full invoices with all line items"
        required: false
        type: "boolean"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Invoice"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.invoice_controller"
    put:
      tags:
      - "invoice"
      summary: "Update an invoice"
      description: "Update invoice description and tags. Changes to other fields are\
        \ ignored"
      operationId: "invoice_update"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Invoice ID"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Invoice parameters"
        required: false
        schema:
          $ref: "#/definitions/InvoiceParameters"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.invoice_controller"
    delete:
      tags:
      - "invoice"
      summary: "Delete an invoice"
      description: "Delete an invoice.  It can be recreated by rescanning the corresponding\
        \ document"
      operationId: "invoice_delete"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Invoice ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.invoice_controller"
  /invoice/{id}/validate:
    post:
      tags:
      - "invoice"
      summary: "Start invoice validations"
      description: "Run invoice validations"
      operationId: "invoice_validate"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Invoice ID"
        required: true
        type: "string"
      responses:
        202:
          description: "Accepted"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.invoice_controller"
  /document:
    get:
      tags:
      - "document"
      summary: "List documents"
      description: "Return a list of all documents"
      operationId: "document_show_all"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful query"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Document"
      x-swagger-router-controller: "api.controllers.document_controller"
    post:
      tags:
      - "document"
      summary: "Upload document"
      description: "Upload a new document for scanning"
      operationId: "document_create"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "description"
        in: "formData"
        description: "A optional description of the document"
        required: false
        type: "string"
      - name: "scan"
        in: "formData"
        description: "Flag to control scanning"
        required: false
        type: "boolean"
        default: true
      - name: "file"
        in: "formData"
        description: "Document file"
        required: true
        type: "file"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Document"
        400:
          description: "Invoice creation failed"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "api.controllers.document_controller"
  /document/{id}:
    get:
      tags:
      - "document"
      summary: "Return document content"
      description: "Download document content"
      operationId: "document_fetch_content"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "id"
        in: "path"
        description: "Document ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.document_controller"
    head:
      tags:
      - "document"
      summary: "Return document metadata"
      description: "Download document content"
      operationId: "document_show"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "id"
        in: "path"
        description: "Document ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Document"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.document_controller"
    put:
      tags:
      - "document"
      summary: "Update document information"
      description: "Update document description and tags. Changes to other fields\
        \ are ignored"
      operationId: "document_update"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Document ID"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Document descriptor"
        required: false
        schema:
          $ref: "#/definitions/DocumentParameters"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.document_controller"
    delete:
      tags:
      - "document"
      summary: "Delete a invoice"
      description: "Delete a single document and associated semantic content"
      operationId: "document_delete"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Invoice ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.document_controller"
  /document/{id}/scan:
    post:
      tags:
      - "document"
      summary: "Kick off document scanning"
      description: "Run background scanning on document.  The document state and semantic\
        \ information will be updated when finished."
      operationId: "document_scan"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Document ID"
        required: true
        type: "string"
      responses:
        202:
          description: "Accepted"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.document_controller"
  /observation:
    get:
      tags:
      - "inventory"
      summary: "List observations"
      description: "Return a list of all observations"
      operationId: "observation_show_all"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful query"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Observation"
      x-swagger-router-controller: "api.controllers.inventory_controller"
    post:
      tags:
      - "inventory"
      summary: "Upload observation"
      description: "Upload a new observation"
      operationId: "observation_create"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "Observation content"
        required: true
        type: "file"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Observation"
        400:
          description: "Creation failed"
          schema:
            $ref: "#/definitions/ApiResponse"
      x-swagger-router-controller: "api.controllers.inventory_controller"
  /observation/{id}:
    get:
      tags:
      - "inventory"
      summary: "Return observation content"
      description: "Download observation content serialized to UTF-encoded string"
      operationId: "observation_fetch_content"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "id"
        in: "path"
        description: "Observation ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.inventory_controller"
    head:
      tags:
      - "inventory"
      summary: "Return observation metadata"
      description: "Download observation metadata"
      operationId: "observation_show"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Observation ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Observation"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.inventory_controller"
    delete:
      tags:
      - "inventory"
      summary: "Delete a invoice"
      description: "Delete an observation and derived inventory information"
      operationId: "observation_delete"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Observation ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.inventory_controller"
  /observation/{id}/process:
    post:
      tags:
      - "inventory"
      summary: "Kick off background processing of observation"
      description: "Run background processing of observation, which may generate one\
        \ or more inventory records."
      operationId: "observation_process"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Observation ID"
        required: true
        type: "string"
      responses:
        202:
          description: "Accepted"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.inventory_controller"
  /host:
    get:
      tags:
      - "inventory"
      summary: "List current host inventory records"
      description: "Return a list of current hosts in inventory.  This returns the\
        \ most recent record for each host."
      operationId: "host_show_all"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful query"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Host"
      x-swagger-router-controller: "api.controllers.inventory_controller"
  /host/{id}:
    get:
      tags:
      - "inventory"
      summary: "Show single host inventory record"
      description: "Returns the most recent inventory record for a specific host.\
        \  The host must be identified by the resource ID or internal ID"
      operationId: "host_show"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Host resource ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Host"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.inventory_controller"
    delete:
      tags:
      - "inventory"
      summary: "Delete host record"
      description: "Delete a host record.  It can be recreated by rescanning the corresponding\
        \ document"
      operationId: "host_delete"
      parameters:
      - name: "id"
        in: "path"
        description: "Invoice ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful"
        404:
          description: "Not Found"
      x-swagger-router-controller: "api.controllers.inventory_controller"
securityDefinitions:
  APIKeyHeader:
    type: "apiKey"
    name: "vnd.io.goldfin.session"
    in: "header"
definitions:
  LoginCredentials:
    properties:
      user:
        type: "string"
        description: "User name in form 'username@tenantname'"
      password:
        type: "string"
        description: "User password"
    description: "Login credentials"
  Tenant:
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "Unique tenant id"
      name:
        type: "string"
        description: "Unique tenant name"
      schema_suffix:
        type: "string"
        description: "Tenant schema suffix"
      description:
        type: "string"
        description: "Optional information about the tenant"
      state:
        type: "string"
        description: "The current processing state of the tenant. "
        enum:
        - "PENDING"
        - "ENABLED"
        - "DISABLED"
      creationDate:
        type: "string"
        description: "Date invoice record was created"
    description: "Tenant description"
  TenantParameters:
    properties:
      name:
        type: "string"
        description: "Unique tenant name"
      schema_suffix:
        type: "string"
        description: "Tenant schema suffix"
      description:
        type: "string"
        description: "Optional information about the tenant"
    description: "Parameters for creating or updating a tenant"
  User:
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "Unique user id"
      tenantId:
        type: "string"
        format: "uuid"
        description: "Tenant ID"
      username:
        type: "string"
        description: "Unique user name"
      roles:
        type: "string"
        description: "Comma-separated list of user roles"
      creationDate:
        type: "string"
        description: "Date user record was created"
    description: "User description"
  UserParameters:
    properties:
      user:
        type: "string"
        description: "Unique user name in form 'username@tenantname'"
      initialPassword:
        type: "string"
        description: "Initial user password; ignored after creation"
      roles:
        type: "string"
        description: "Comma-separated list of user roles"
    description: "Parameters for creating or updating a user account"
  UserPasswordParameters:
    properties:
      oldPassword:
        type: "string"
        description: "Existing user password.  Required to change user password."
      newPassword:
        type: "string"
        description: "New user password."
    description: "Parameters to change a user password"
  Vendor:
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "Unique vendor id"
      identifier:
        type: "string"
        description: "Key used to describe vendor for accounting purposes"
      name:
        type: "string"
        description: "Vendor display name"
      state:
        type: "string"
        description: "Current state of the vendor.  Active vendors have current inventory\
          \ and invoices."
        enum:
        - "ACTIVE"
        - "INACTIVE"
      creationDate:
        type: "string"
        description: "Date record was created"
    description: "Vendor description"
  VendorParameters:
    properties:
      identifier:
        type: "string"
        description: "Key used to describe vendor for accounting purposes"
      name:
        type: "string"
        description: "Vendor name"
      state:
        type: "string"
        description: "Current state of the vendor.  Active vendors have current inventory\
          \ and invoices."
        enum:
        - "ACTIVE"
        - "INACTIVE"
    description: "Parameters used for vendor creation or update requests"
  Document:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "Document ID"
      name:
        type: "string"
        description: "Name of the document"
      description:
        type: "string"
        description: "Optional description of the document"
      tags:
        type: "string"
        description: "A user-provided list of name-value pairs that describe the invoice"
      contentType:
        type: "string"
        description: "Internet media type (e.g., application/octet-stream)"
      contentLength:
        type: "number"
        format: "int64"
        description: "Document length in bytes"
      thumbprint:
        type: "string"
        description: "SHA-256 thumbprint of document content"
      locator:
        type: "string"
        format: "url"
        description: "Storage locator of the document"
      state:
        type: "string"
        description: "The current processing state of the document.  The document\
          \ type and content ID are available after scanning"
        enum:
        - "CREATED"
        - "SCAN_REQUESTED"
        - "SCANNED"
        - "ERROR"
      semanticType:
        type: "string"
        description: "Kind of document, e.g., an invoice."
        enum:
        - "INVOICE"
        - "UNKNOWN"
      semanticId:
        type: "string"
        format: "uuid"
        description: "ID of the document's scanned content, e.g. an invoice ID"
      creationDate:
        type: "string"
        description: "Date document was uploaded"
    description: "A document, for example a PDF file containing an invoice"
  DocumentParameters:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Name of the document"
      description:
        type: "string"
        description: "Optional description of the document"
    description: "User settable document parameters"
  DocumentRegion:
    type: "object"
    properties:
      documentId:
        type: "string"
        format: "uuid"
        description: "Document ID"
      page:
        type: "integer"
        format: "int32"
        description: "Page number"
      left:
        type: "integer"
        format: "int32"
        description: "Left pixel coordinate"
      top:
        type: "integer"
        format: "int32"
        description: "Top pixel coordinate"
      right:
        type: "integer"
        format: "int32"
        description: "Right pixel coordinate"
      bottom:
        type: "integer"
        format: "int32"
        description: "Bottom pixel coordinate"
    description: "Location within a document page expressed in page number and pixel\
      \ region coordinates on the page"
  Invoice:
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "Invoice ID"
      documentId:
        type: "string"
        format: "uuid"
        description: "Source document ID"
      description:
        type: "string"
        description: "A user-provided description of the invoice"
      tags:
        type: "string"
        description: "A user-provided list of name-value pairs that describe the invoice"
      identifier:
        type: "string"
        description: "Invoice identifier"
      effectiveDate:
        type: "string"
        format: "date-time"
        description: "Invoice effective date"
      vendor:
        type: "string"
        description: "Vendor key"
      subtotalAmount:
        type: "number"
        description: "Invoice subtotal amount"
      tax:
        type: "number"
        description: "Invoice tax amount"
      totalAmount:
        type: "number"
        description: "Invoice total (subtotal + tax)"
      currency:
        type: "string"
        description: "Currency type"
      items:
        type: "array"
        description: "Invoice items"
        items:
          $ref: "#/definitions/InvoiceItem"
      creationDate:
        type: "string"
        description: "Date user record was created"
    description: "Invoice content obtained from document scanning"
  InvoiceItem:
    type: "object"
    properties:
      itemId:
        type: "string"
        description: "Invoice item ID if specified"
      resourceId:
        type: "string"
        description: "Inventory resource ID"
      description:
        type: "string"
        description: "Invoice item description"
      unitAmount:
        type: "number"
        description: "Cost per unit"
      units:
        type: "integer"
        description: "Number of units"
      totalAmount:
        type: "number"
        description: "Total cost for all units"
      currency:
        type: "string"
        description: "Item currency"
      startDate:
        type: "string"
        format: "date-time"
        description: "Begining of the time range"
      endDate:
        type: "string"
        format: "date-time"
        description: "End of the time range"
      oneTimeCharge:
        type: "boolean"
        description: "If true, this is a one-time charge and the starting date provides\
          \ the date"
      region:
        $ref: "#/definitions/DocumentRegion"
      inventoryId:
        type: "string"
        description: "Id of an inventory description"
      inventoryType:
        type: "string"
        enum:
        - "HOST"
    description: "Common fields for all invoice line items"
  InvoiceParameters:
    properties:
      description:
        type: "string"
        description: "A user-provided description of the invoice"
      tags:
        type: "string"
        description: "A user-provided list of name-value pairs that describe the invoice"
    description: "User settable invoice parameters"
  Observation:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "Observation ID"
      vendor:
        type: "string"
        description: "Vendor key"
      effectiveDate:
        type: "string"
        format: "date-time"
        description: "Effective date when observation was made"
      description:
        type: "string"
        description: "Optional description"
      contentType:
        type: "string"
        description: "Internet media type (e.g., application/octet-stream)"
      contentLength:
        type: "number"
        format: "int64"
        description: "Content length in bytes"
      thumbprint:
        type: "string"
        description: "SHA-256 thumbprint of observation"
      locator:
        type: "string"
        format: "url"
        description: "Storage locator of the observation"
      state:
        type: "string"
        description: "The current processing state of the observation"
        enum:
        - "CREATED"
        - "PROCESSED"
        - "ERROR"
      observationType:
        type: "string"
        description: "Kind of observation, e.g., inventory."
        enum:
        - "INVENTORY"
        - "UNKNOWN"
    description: "An observation related to vendor inventory"
  ObservationContent:
    type: "object"
    properties:
      vendor:
        type: "string"
        description: "Vendor key"
      effectiveDate:
        type: "string"
        format: "date-time"
        description: "Effective date when observation was made"
      description:
        type: "string"
        description: "Optional description"
      observationType:
        type: "string"
        description: "Kind of observation, e.g., inventory."
        enum:
        - "INVENTORY"
        - "UNKNOWN"
      data:
        type: "string"
        description: "String containing serialized JSON observation"
    description: "Raw observation data."
  Host:
    properties:
      hostId:
        type: "string"
        format: "uuid"
        description: "Internal host ID from vendor used to identify host in inventory"
      hostType:
        type: "string"
        description: "Type of host"
        enum:
        - "BARE_METAL"
        - "CLOUD"
        - "UNKNOWN"
      hostModel:
        type: "string"
        description: "Host model or marketing name"
      observationId:
        type: "string"
        format: "uuid"
        description: "Observation from which this host record was derived"
      resourceId:
        type: "string"
        description: "Inventory resource ID that can be related to invoice item resource\
          \ ID"
      effectiveDate:
        type: "string"
        format: "date-time"
        description: "Invoice effective date"
      identifier:
        type: "string"
        description: "Internal host identifier"
      vendor:
        type: "string"
        description: "Vendor key"
      region:
        type: "string"
        description: "Geographic region"
      zone:
        type: "string"
        description: "Data center or availability zone within region"
      cpu:
        type: "string"
        description: "CPU model"
      socketCount:
        type: "integer"
        description: "Number of CPU sockets"
      coreCount:
        type: "integer"
        description: "Number of cores per socket"
      ram:
        type: "integer"
        format: "int64"
        description: "Size of RAM in bytes"
      hdd:
        type: "integer"
        format: "int64"
        description: "Size of HDD storage in bytes"
      ssd:
        type: "integer"
        format: "int64"
        description: "Size of SSD storage in bytes"
      nicCount:
        type: "integer"
        description: "Number of network interface cards (NICs)"
      networkTrafficLimit:
        type: "integer"
        format: "int64"
        description: "Number of bytes of network traffer per billing period if there\
          \ is a hard limit"
    description: "Host record from inventory"
  Tag:
    type: "object"
    properties:
      name:
        type: "string"
      value:
        type: "string"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Goldfin.io"
  url: "https://goldfin.io"
