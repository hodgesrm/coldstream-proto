/*
 * Goldfin Service API
 * REST API for Goldfin Intelligent Invoice Processing
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@goldfin.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.goldfin.admin.service.api.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.goldfin.admin.service.api.model.TagSet;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import java.util.UUID;
import javax.validation.constraints.*;

/**
 * Host record from inventory
 */
@ApiModel(description = "Host record from inventory")

public class Host   {
  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("hostId")
  private String hostId = null;

  @JsonProperty("resourceId")
  private String resourceId = null;

  @JsonProperty("effectiveDate")
  private Date effectiveDate = null;

  @JsonProperty("vendorIdentifier")
  private String vendorIdentifier = null;

  @JsonProperty("dataSeriesId")
  private UUID dataSeriesId = null;

  /**
   * Type of host
   */
  public enum HostTypeEnum {
    BARE_METAL("BARE_METAL"),
    
    CLOUD("CLOUD"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    HostTypeEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static HostTypeEnum fromValue(String text) {
      for (HostTypeEnum b : HostTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("hostType")
  private HostTypeEnum hostType = null;

  @JsonProperty("hostModel")
  private String hostModel = null;

  @JsonProperty("region")
  private String region = null;

  @JsonProperty("zone")
  private String zone = null;

  @JsonProperty("datacenter")
  private String datacenter = null;

  @JsonProperty("cpu")
  private String cpu = null;

  @JsonProperty("socketCount")
  private Integer socketCount = null;

  @JsonProperty("coreCount")
  private Integer coreCount = null;

  @JsonProperty("threadCount")
  private Integer threadCount = null;

  @JsonProperty("ram")
  private Long ram = null;

  @JsonProperty("hdd")
  private Long hdd = null;

  @JsonProperty("ssd")
  private Long ssd = null;

  @JsonProperty("nicCount")
  private Integer nicCount = null;

  @JsonProperty("networkTrafficLimit")
  private Long networkTrafficLimit = null;

  @JsonProperty("backupEnabled")
  private Boolean backupEnabled = null;

  @JsonProperty("tags")
  private TagSet tags = null;

  public Host id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Host record ID
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(value = "Host record ID")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Host hostId(String hostId) {
    this.hostId = hostId;
    return this;
  }

  /**
   * Internal host ID from vendor used to identify host in inventory
   * @return hostId
   **/
  @JsonProperty("hostId")
  @ApiModelProperty(value = "Internal host ID from vendor used to identify host in inventory")
  public String getHostId() {
    return hostId;
  }

  public void setHostId(String hostId) {
    this.hostId = hostId;
  }

  public Host resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Inventory resource ID that can be related to invoice item resource ID
   * @return resourceId
   **/
  @JsonProperty("resourceId")
  @ApiModelProperty(value = "Inventory resource ID that can be related to invoice item resource ID")
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }

  public Host effectiveDate(Date effectiveDate) {
    this.effectiveDate = effectiveDate;
    return this;
  }

  /**
   * Observation effective date
   * @return effectiveDate
   **/
  @JsonProperty("effectiveDate")
  @ApiModelProperty(value = "Observation effective date")
  public Date getEffectiveDate() {
    return effectiveDate;
  }

  public void setEffectiveDate(Date effectiveDate) {
    this.effectiveDate = effectiveDate;
  }

  public Host vendorIdentifier(String vendorIdentifier) {
    this.vendorIdentifier = vendorIdentifier;
    return this;
  }

  /**
   * Vendor identifier key
   * @return vendorIdentifier
   **/
  @JsonProperty("vendorIdentifier")
  @ApiModelProperty(value = "Vendor identifier key")
  public String getVendorIdentifier() {
    return vendorIdentifier;
  }

  public void setVendorIdentifier(String vendorIdentifier) {
    this.vendorIdentifier = vendorIdentifier;
  }

  public Host dataSeriesId(UUID dataSeriesId) {
    this.dataSeriesId = dataSeriesId;
    return this;
  }

  /**
   * Id of data series from which this host record was derived
   * @return dataSeriesId
   **/
  @JsonProperty("dataSeriesId")
  @ApiModelProperty(value = "Id of data series from which this host record was derived")
  public UUID getDataSeriesId() {
    return dataSeriesId;
  }

  public void setDataSeriesId(UUID dataSeriesId) {
    this.dataSeriesId = dataSeriesId;
  }

  public Host hostType(HostTypeEnum hostType) {
    this.hostType = hostType;
    return this;
  }

  /**
   * Type of host
   * @return hostType
   **/
  @JsonProperty("hostType")
  @ApiModelProperty(value = "Type of host")
  public HostTypeEnum getHostType() {
    return hostType;
  }

  public void setHostType(HostTypeEnum hostType) {
    this.hostType = hostType;
  }

  public Host hostModel(String hostModel) {
    this.hostModel = hostModel;
    return this;
  }

  /**
   * Host model or marketing name
   * @return hostModel
   **/
  @JsonProperty("hostModel")
  @ApiModelProperty(value = "Host model or marketing name")
  public String getHostModel() {
    return hostModel;
  }

  public void setHostModel(String hostModel) {
    this.hostModel = hostModel;
  }

  public Host region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Geographic region
   * @return region
   **/
  @JsonProperty("region")
  @ApiModelProperty(value = "Geographic region")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public Host zone(String zone) {
    this.zone = zone;
    return this;
  }

  /**
   * Availability zone
   * @return zone
   **/
  @JsonProperty("zone")
  @ApiModelProperty(value = "Availability zone")
  public String getZone() {
    return zone;
  }

  public void setZone(String zone) {
    this.zone = zone;
  }

  public Host datacenter(String datacenter) {
    this.datacenter = datacenter;
    return this;
  }

  /**
   * Data center
   * @return datacenter
   **/
  @JsonProperty("datacenter")
  @ApiModelProperty(value = "Data center")
  public String getDatacenter() {
    return datacenter;
  }

  public void setDatacenter(String datacenter) {
    this.datacenter = datacenter;
  }

  public Host cpu(String cpu) {
    this.cpu = cpu;
    return this;
  }

  /**
   * CPU model
   * @return cpu
   **/
  @JsonProperty("cpu")
  @ApiModelProperty(value = "CPU model")
  public String getCpu() {
    return cpu;
  }

  public void setCpu(String cpu) {
    this.cpu = cpu;
  }

  public Host socketCount(Integer socketCount) {
    this.socketCount = socketCount;
    return this;
  }

  /**
   * Number of CPU sockets
   * @return socketCount
   **/
  @JsonProperty("socketCount")
  @ApiModelProperty(value = "Number of CPU sockets")
  public Integer getSocketCount() {
    return socketCount;
  }

  public void setSocketCount(Integer socketCount) {
    this.socketCount = socketCount;
  }

  public Host coreCount(Integer coreCount) {
    this.coreCount = coreCount;
    return this;
  }

  /**
   * Number of cores per socket
   * @return coreCount
   **/
  @JsonProperty("coreCount")
  @ApiModelProperty(value = "Number of cores per socket")
  public Integer getCoreCount() {
    return coreCount;
  }

  public void setCoreCount(Integer coreCount) {
    this.coreCount = coreCount;
  }

  public Host threadCount(Integer threadCount) {
    this.threadCount = threadCount;
    return this;
  }

  /**
   * Number of hardware threads per core
   * @return threadCount
   **/
  @JsonProperty("threadCount")
  @ApiModelProperty(value = "Number of hardware threads per core")
  public Integer getThreadCount() {
    return threadCount;
  }

  public void setThreadCount(Integer threadCount) {
    this.threadCount = threadCount;
  }

  public Host ram(Long ram) {
    this.ram = ram;
    return this;
  }

  /**
   * Size of RAM in bytes
   * @return ram
   **/
  @JsonProperty("ram")
  @ApiModelProperty(value = "Size of RAM in bytes")
  public Long getRam() {
    return ram;
  }

  public void setRam(Long ram) {
    this.ram = ram;
  }

  public Host hdd(Long hdd) {
    this.hdd = hdd;
    return this;
  }

  /**
   * Size of HDD storage in bytes
   * @return hdd
   **/
  @JsonProperty("hdd")
  @ApiModelProperty(value = "Size of HDD storage in bytes")
  public Long getHdd() {
    return hdd;
  }

  public void setHdd(Long hdd) {
    this.hdd = hdd;
  }

  public Host ssd(Long ssd) {
    this.ssd = ssd;
    return this;
  }

  /**
   * Size of SSD storage in bytes
   * @return ssd
   **/
  @JsonProperty("ssd")
  @ApiModelProperty(value = "Size of SSD storage in bytes")
  public Long getSsd() {
    return ssd;
  }

  public void setSsd(Long ssd) {
    this.ssd = ssd;
  }

  public Host nicCount(Integer nicCount) {
    this.nicCount = nicCount;
    return this;
  }

  /**
   * Number of network interface cards (NICs)
   * @return nicCount
   **/
  @JsonProperty("nicCount")
  @ApiModelProperty(value = "Number of network interface cards (NICs)")
  public Integer getNicCount() {
    return nicCount;
  }

  public void setNicCount(Integer nicCount) {
    this.nicCount = nicCount;
  }

  public Host networkTrafficLimit(Long networkTrafficLimit) {
    this.networkTrafficLimit = networkTrafficLimit;
    return this;
  }

  /**
   * Number of bytes of network traffer per billing period if there is a hard limit
   * @return networkTrafficLimit
   **/
  @JsonProperty("networkTrafficLimit")
  @ApiModelProperty(value = "Number of bytes of network traffer per billing period if there is a hard limit")
  public Long getNetworkTrafficLimit() {
    return networkTrafficLimit;
  }

  public void setNetworkTrafficLimit(Long networkTrafficLimit) {
    this.networkTrafficLimit = networkTrafficLimit;
  }

  public Host backupEnabled(Boolean backupEnabled) {
    this.backupEnabled = backupEnabled;
    return this;
  }

  /**
   * If true backup is enabled for this host
   * @return backupEnabled
   **/
  @JsonProperty("backupEnabled")
  @ApiModelProperty(value = "If true backup is enabled for this host")
  public Boolean isBackupEnabled() {
    return backupEnabled;
  }

  public void setBackupEnabled(Boolean backupEnabled) {
    this.backupEnabled = backupEnabled;
  }

  public Host tags(TagSet tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   **/
  @JsonProperty("tags")
  @ApiModelProperty(value = "")
  public TagSet getTags() {
    return tags;
  }

  public void setTags(TagSet tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Host host = (Host) o;
    return Objects.equals(this.id, host.id) &&
        Objects.equals(this.hostId, host.hostId) &&
        Objects.equals(this.resourceId, host.resourceId) &&
        Objects.equals(this.effectiveDate, host.effectiveDate) &&
        Objects.equals(this.vendorIdentifier, host.vendorIdentifier) &&
        Objects.equals(this.dataSeriesId, host.dataSeriesId) &&
        Objects.equals(this.hostType, host.hostType) &&
        Objects.equals(this.hostModel, host.hostModel) &&
        Objects.equals(this.region, host.region) &&
        Objects.equals(this.zone, host.zone) &&
        Objects.equals(this.datacenter, host.datacenter) &&
        Objects.equals(this.cpu, host.cpu) &&
        Objects.equals(this.socketCount, host.socketCount) &&
        Objects.equals(this.coreCount, host.coreCount) &&
        Objects.equals(this.threadCount, host.threadCount) &&
        Objects.equals(this.ram, host.ram) &&
        Objects.equals(this.hdd, host.hdd) &&
        Objects.equals(this.ssd, host.ssd) &&
        Objects.equals(this.nicCount, host.nicCount) &&
        Objects.equals(this.networkTrafficLimit, host.networkTrafficLimit) &&
        Objects.equals(this.backupEnabled, host.backupEnabled) &&
        Objects.equals(this.tags, host.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, hostId, resourceId, effectiveDate, vendorIdentifier, dataSeriesId, hostType, hostModel, region, zone, datacenter, cpu, socketCount, coreCount, threadCount, ram, hdd, ssd, nicCount, networkTrafficLimit, backupEnabled, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Host {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    hostId: ").append(toIndentedString(hostId)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    vendorIdentifier: ").append(toIndentedString(vendorIdentifier)).append("\n");
    sb.append("    dataSeriesId: ").append(toIndentedString(dataSeriesId)).append("\n");
    sb.append("    hostType: ").append(toIndentedString(hostType)).append("\n");
    sb.append("    hostModel: ").append(toIndentedString(hostModel)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("    datacenter: ").append(toIndentedString(datacenter)).append("\n");
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    socketCount: ").append(toIndentedString(socketCount)).append("\n");
    sb.append("    coreCount: ").append(toIndentedString(coreCount)).append("\n");
    sb.append("    threadCount: ").append(toIndentedString(threadCount)).append("\n");
    sb.append("    ram: ").append(toIndentedString(ram)).append("\n");
    sb.append("    hdd: ").append(toIndentedString(hdd)).append("\n");
    sb.append("    ssd: ").append(toIndentedString(ssd)).append("\n");
    sb.append("    nicCount: ").append(toIndentedString(nicCount)).append("\n");
    sb.append("    networkTrafficLimit: ").append(toIndentedString(networkTrafficLimit)).append("\n");
    sb.append("    backupEnabled: ").append(toIndentedString(backupEnabled)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

