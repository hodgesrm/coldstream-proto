/**
 * Copyright (c) 2017 Goldfin.io.  All rights reserved. 
 */
package io.goldfin.shared.crypto.test;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.Scanner;

import org.junit.Assert;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import io.goldfin.shared.crypto.Sha256HashingAlgorithm;
import io.goldfin.shared.utilities.FileHelper;

/**
 * Verify SHA-256 generation.
 */
public class Sha256Test {
	static final Logger logger = LoggerFactory.getLogger(Sha256Test.class);

	/**
	 * Verify that we correctly compute a SHA-256 by computing random byte data and
	 * comparing computation on bytes vs. file contents.
	 */
	@Test
	public void testFileSha256() throws Exception {
		// Generate buffer of random bytes and write to file.
		File testDir = FileHelper.resetDirectory(new File("target/testdata/testFileSha256"));
		File testFile = new File(testDir, "random_data.dat");

		byte[] data = new byte[10000];
		for (int i = 0; i < data.length; i++) {
			int nextChar = (int) (Math.random() * 255);
			data[i] = (byte) nextChar;
		}
		FileHelper.writeBytes(testFile, data);

		// Compute SHA256 on both file and buffer. Values should be identical.
		byte[] digestFromBuffer = Sha256HashingAlgorithm.generateHash(data);
		byte[] digestFromFile = Sha256HashingAlgorithm.generateHash(testFile);
		Assert.assertArrayEquals(digestFromBuffer, digestFromFile);

		// Compute against a stream for good measure.
		try (InputStream input = new FileInputStream(testFile)) {
			byte[] digestFromStream = Sha256HashingAlgorithm.generateHash(input);
			Assert.assertArrayEquals(digestFromBuffer, digestFromStream);
		}

		// If we can find sha256sum, get that value and compare with hex string
		// generated by SHA256 algorithm.
		String cmd = String.format("sha256sum %s", testFile.getAbsolutePath());
		Scanner s = new Scanner(Runtime.getRuntime().exec(cmd).getInputStream());
		String sha256SumString = s.next().trim();
		s.close();
		logger.info(String.format("sha256sum string value: %s", sha256SumString));

		String hexString = Sha256HashingAlgorithm.generateHashString(testFile);
		logger.info(String.format("Hex string value: %s", hexString));
		Assert.assertEquals(sha256SumString, hexString);
	}
}