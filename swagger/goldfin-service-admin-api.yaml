swagger: '2.0'
info:
  description: REST API for Goldfin Service Administration
  version: 1.0.0
  title: Goldfin Service Admin API
  termsOfService: 'http://goldfin.io/terms/'
  contact:
    email: info@goldfin.io
host: admin.goldfin.io
basePath: /api/v1
tags:
  - name: security
    description: Session login and logout
  - name: tenant
    description: Tenant management
  - name: vendor
    description: Per-tenant vendor management
  - name: invoice
    description: Per-tenant invoice management
schemes:
  - https
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: vnd.io.goldfin.session
security:
  - APIKeyHeader: []
paths:
  /session:
    post:
      tags:
        - security
      summary: Login to system
      security: []
      description: Obtain API key using login credentials
      operationId: loginByCredentials
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Login credentials
          required: true
          schema:
            $ref: '#/definitions/LoginCredentials'
      responses:
        '200':
          description: OK
          headers:
            vnd-io-goldfin-auth:
              type: string
              description: >-
                Session key, should be submitted on future requests to show
                authorization
        '400':
          description: Bad input
          schema:
            $ref: '#/definitions/ApiResponse'
  '/session/{token}':
    delete:
      tags:
        - security
      summary: Logout from system
      description: 'Delete session, which is no longer usable after this call'
      operationId: logout
      produces:
        - application/json
      parameters:
        - name: token
          in: path
          description: Session ID token
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  /tenant:
    post:
      tags:
        - tenant
      summary: Create a new tenant
      description: Upload a new tenant registration request.
      operationId: tenantCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Tenant creation parameters
          required: true
          schema:
            $ref: '#/definitions/TenantParameters'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Tenant'
        '400':
          description: Tenant creation failed
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      tags:
        - tenant
      summary: List tenants
      description: Return a list of all tenants
      operationId: tenantShowall
      produces:
        - application/json
      responses:
        '200':
          description: Successful query
          schema:
            items:
              $ref: '#/definitions/Tenant'
  '/tenant/{id}':
    get:
      tags:
        - tenant
      summary: Show a single tenant
      description: Return all information relative to a single tenant
      operationId: tenantShow
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Tenant'
        '404':
          description: Not Found
    put:
      tags:
        - tenant
      summary: Update a tenant
      description: Update invoice description and tags. Changes to other fields are ignored
      operationId: tenantUpdate
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          type: string
        - name: body
          in: body
          description: Tenant parameters
          schema:
            $ref: '#/definitions/TenantParameters'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    delete:
      tags:
        - tenant
      summary: Delete a tenant
      description: Delete a single tenant
      operationId: tenantDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  /user:
    post:
      tags:
        - tenant
      summary: Create a new user for a tenant
      description: Upload a new user registration request.
      operationId: userCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User registration request parameters
          required: true
          schema:
            $ref: '#/definitions/UserParameters'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/User'
        '400':
          description: User creation failed
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      tags:
        - tenant
      summary: List users
      description: Return a list of all users visible to current user
      operationId: userShowall
      produces:
        - application/json
      responses:
        '200':
          description: Successful query
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  '/user/{id}':
    get:
      tags:
        - tenant
      summary: Show a single user
      description: Return all information relative to a single user
      operationId: userShow
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Tenant'
        '404':
          description: Not Found
    put:
      tags:
        - tenant
      summary: Update a user
      description: Update user description
      operationId: userUpdate
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
        - name: body
          in: body
          description: User parameters
          schema:
            $ref: '#/definitions/UserParameters'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    delete:
      tags:
        - tenant
      summary: Delete a user
      description: Delete a user
      operationId: userDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  '/user/{id}/password':
    put:
      tags:
        - tenant
      summary: Update user password
      description: Sets a new user password
      operationId: userUpdatePassword
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
        - name: body
          in: body
          description: Password change parameters
          schema:
            $ref: '#/definitions/UserPasswordParameters'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  /vendor:
    post:
      tags:
        - vendor
      summary: Create a new vendor
      description: >-
        Upload a new vendor definition.  Vendors are also created automatically
        if a vendor invoice is processed.
      operationId: vendorCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Vendor registration request parameters
          required: true
          schema:
            $ref: '#/definitions/VendorParameters'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Vendor'
        '400':
          description: Vendor creation failed
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      tags:
        - vendor
      summary: List vendors
      description: Return a list of all vendors
      operationId: vendorShowall
      produces:
        - application/json
      responses:
        '200':
          description: Successful query
          schema:
            items:
              $ref: '#/definitions/Vendor'
  '/vendor/{id}':
    get:
      tags:
        - vendor
      summary: Show a single vendor
      description: Return all information relative to a single vendor
      operationId: vendorShow
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Vendor ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Vendor'
        '404':
          description: Not Found
    put:
      tags:
        - vendor
      summary: Update a vendor
      description: Update vendor description.
      operationId: vendorUpdate
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: Vendor ID
          required: true
          type: string
        - name: body
          in: body
          description: Vendor parameters
          schema:
            $ref: '#/definitions/VendorParameters'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    delete:
      tags:
        - vendor
      summary: Delete a vendor
      description: >-
        Delete a single vendor.  This can only be done if the vendor is not
        attached to invoices or existing inventory.
      operationId: vendorDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: vendor ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '400':
          description: Invalid Request
        '404':
          description: Not Found
  /invoice:
    get:
      tags:
        - invoice
      summary: List invoices
      description: Return a list of all invoices
      operationId: invoiceShowAll
      produces:
        - application/json
      parameters:
        - name: full
          in: query
          description: 'If true, return full invoices with all line items'
          type: boolean
      responses:
        '200':
          description: Successful query
          schema:
            type: array
            items:
              $ref: '#/definitions/Invoice'
  '/invoice/{id}':
    get:
      tags:
        - invoice
      summary: Show a single invoice
      description: Return all information relative to a single invoice
      operationId: invoiceShow
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Invoice ID
          required: true
          type: string
        - name: full
          in: query
          description: 'If true, return full invoices with all line items'
          type: boolean
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Invoice'
        '404':
          description: Not Found
    put:
      tags:
        - invoice
      summary: Update an invoice
      description: Update invoice description and tags. Changes to other fields are ignored
      operationId: invoiceUpdate
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Invoice ID
          required: true
          type: string
        - name: body
          in: body
          description: Invoice parameters
          schema:
            $ref: '#/definitions/InvoiceParameters'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    delete:
      tags:
        - invoice
      summary: Delete an invoice
      description: >-
        Delete an invoice.  It can be recreated by rescanning the corresponding
        document
      operationId: invoiceDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Invoice ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  '/invoice/{id}/validate':
    post:
      tags:
        - invoice
      summary: Start invoice validations
      description: Run invoice validations
      operationId: invoiceValidate
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Invoice ID
          required: true
          type: string
      responses:
        '202':
          description: Accepted
        '404':
          description: Not Found
  /document:
    post:
      tags:
        - document
      summary: Upload document
      description: Upload a new document for scanning
      operationId: documentCreate
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: description
          in: formData
          description: A optional description of the document
          type: string
        - name: scan
          in: formData
          description: Flag to control scanning
          type: boolean
          default: true
        - name: file
          in: formData
          description: Document file
          required: true
          type: file
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Document'
        '400':
          description: Invoice creation failed
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      tags:
        - document
      summary: List documents
      description: Return a list of all documents
      operationId: documentShowAll
      produces:
        - application/json
      responses:
        '200':
          description: Successful query
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
  '/document/{id}':
    get:
      tags:
        - document
      summary: Return document content
      description: Download document content
      operationId: documentFetchContent
      produces:
        - application/octet-stream
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    head:
      tags:
        - document
      summary: Return document metadata
      description: Download document content
      operationId: documentShow
      produces:
        - application/octet-stream
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Document'
        '404':
          description: Not Found
    put:
      tags:
        - document
      summary: Update document information
      description: >-
        Update document description and tags. Changes to other fields are
        ignored
      operationId: documentUpdate
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          type: string
        - name: body
          in: body
          description: Document descriptor
          schema:
            $ref: '#/definitions/DocumentParameters'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    delete:
      tags:
        - document
      summary: Delete a invoice
      description: Delete a single document and associated semantic content
      operationId: documentDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Invoice ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  '/document/{id}/scan':
    post:
      tags:
        - document
      summary: Kick off document scanning
      description: >-
        Run background scanning on document.  The document state and semantic
        information will be updated when finished.
      operationId: documentScan
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          type: string
      responses:
        '202':
          description: Accepted
        '404':
          description: Not Found
definitions:
  LoginCredentials:
    description: Login credentials
    properties:
      user:
        type: string
        description: User name in form 'username@tenantname'
      password:
        type: string
        description: User password
  Tenant:
    description: Tenant description
    properties:
      id:
        type: string
        format: uuid
        description: Unique tenant id
      name:
        type: string
        description: Unique tenant name
      schema_suffix:
        type: string
        description: Tenant schema suffix
      description:
        type: string
        description: Optional information about the tenant
      state:
        description: 'The current processing state of the tenant. '
        enum:
          - PENDING
          - ENABLED
          - DISABLED
      creationDate:
        type: string
        description: Date invoice record was created
  TenantParameters:
    description: Parameters for creating or updating a tenant
    properties:
      name:
        type: string
        description: Unique tenant name
      schema_suffix:
        type: string
        description: Tenant schema suffix
      description:
        type: string
        description: Optional information about the tenant
  User:
    description: User description
    properties:
      id:
        type: string
        format: uuid
        description: Unique user id
      tenantId:
        type: string
        format: uuid
        description: Tenant ID
      username:
        type: string
        description: Unique user name
      roles:
        type: string
        description: Comma-separated list of user roles
      creationDate:
        type: string
        description: Date user record was created
  UserParameters:
    description: Parameters for creating or updating a user account
    properties:
      user:
        type: string
        description: Unique user name in form 'username@tenantname'
      initialPassword:
        type: string
        description: Initial user password; ignored after creation
      roles:
        type: string
        description: Comma-separated list of user roles
  UserPasswordParameters:
    description: Parameters to change a user password
    properties:
      oldPassword:
        type: string
        description: Existing user password.  Required to change user password.
      newPassword:
        type: string
        description: New user password.
  Vendor:
    description: Vendor description
    properties:
      id:
        type: string
        format: uuid
        description: Unique vendor id
      identifier:
        type: string
        description: Key used to describe vendor for accounting purposes
      name:
        type: string
        description: Vendor display name
      state:
        description: >-
          Current state of the vendor.  Active vendors have current inventory
          and invoices.
        enum:
          - ACTIVE
          - INACTIVE
      creationDate:
        type: string
        description: Date record was created
  VendorParameters:
    description: Parameters used for vendor creation or update requests
    properties:
      identifier:
        type: string
        description: Key used to describe vendor for accounting purposes
      name:
        type: string
        description: Vendor name
      state:
        description: >-
          Current state of the vendor.  Active vendors have current inventory
          and invoices.
        enum:
          - ACTIVE
          - INACTIVE
  Document:
    description: 'A document, for example a PDF file containing an invoice'
    type: object
    properties:
      id:
        type: string
        description: Document ID
        format: uuid
      name:
        type: string
        description: Name of the document
      description:
        type: string
        description: Optional description of the document
      tags:
        type: string
        description: A user-provided list of name-value pairs that describe the invoice
      contentType:
        type: string
        description: 'Internet media type (e.g., application/octet-stream)'
      contentLength:
        type: number
        format: int64
        description: Document length in bytes
      thumbprint:
        type: string
        description: SHA-256 thumbprint of document content
      locator:
        type: string
        format: url
        description: Storage locator of the document
      state:
        description: >-
          The current processing state of the document.  The document type and
          content ID are available after scanning
        enum:
          - CREATED
          - SCAN_REQUESTED
          - SCANNED
          - ERROR
      semanticType:
        description: 'Kind of document, e.g., an invoice.'
        enum:
          - INVOICE
          - UNKNOWN
      semanticId:
        type: string
        description: 'ID of the document''s scanned content, e.g. an invoice ID'
        format: uuid
      creationDate:
        type: string
        description: Date document was uploaded
  DocumentParameters:
    description: User settable document parameters
    type: object
    properties:
      name:
        type: string
        description: Name of the document
      description:
        type: string
        description: Optional description of the document
  DocumentRegion:
    description: >-
      Location within a document page expressed in page number and pixel region
      coordinates on the page
    type: object
    properties:
      documentId:
        type: string
        format: uuid
        description: Document ID
      page:
        type: integer
        format: int32
        description: Page number
      left:
        type: integer
        format: int32
        description: Left pixel coordinate
      top:
        type: integer
        format: int32
        description: Top pixel coordinate
      right:
        type: integer
        format: int32
        description: Right pixel coordinate
      bottom:
        type: integer
        format: int32
        description: Bottom pixel coordinate
  Invoice:
    description: Invoice content obtained from document scanning
    properties:
      id:
        type: string
        format: uuid
        description: Invoice ID
      documentId:
        type: string
        format: uuid
        description: Source document ID
      description:
        type: string
        description: A user-provided description of the invoice
      tags:
        type: string
        description: A user-provided list of name-value pairs that describe the invoice
      identifier:
        type: string
        description: Invoice identifier
      effectiveDate:
        type: string
        format: date-time
        description: Invoice effective date
      vendor:
        type: string
        description: Vendor name
      subtotalAmount:
        type: number
        description: Invoice subtotal amount
      tax:
        type: number
        description: Invoice tax amount
      totalAmount:
        type: number
        description: Invoice total (subtotal + tax)
      currency:
        type: string
        description: Currency type
      items:
        type: array
        description: Invoice items
        items:
          $ref: '#/definitions/InvoiceItem'
      creationDate:
        type: string
        description: Date user record was created
  InvoiceItem:
    description: Common fields for all invoice line items
    type: object
    properties:
      itemId:
        type: string
        description: Invoice item ID if specified
      resourceId:
        type: string
        description: Inventory resource ID
      description:
        type: string
        description: Invoice item description
      unitAmount:
        type: number
        description: Cost per unit
      units:
        type: integer
        description: Number of units
      totalAmount:
        type: number
        description: Total cost for all units
      currency:
        type: string
        description: Item currency
      startDate:
        type: string
        format: date-time
        description: Begining of the time range
      endDate:
        type: string
        format: date-time
        description: End of the time range
      oneTimeCharge:
        type: boolean
        description: If true, this is a one-time charge and the starting date provides the date
      region:
        $ref: '#/definitions/DocumentRegion'
      inventoryId:
        type: string
        description: Id of an inventory description
      inventoryType:
        type: string
        enum:
          - HOST
  InvoiceParameters:
    description: User settable invoice parameters
    properties:
      description:
        type: string
        description: A user-provided description of the invoice
      tags:
        type: string
        description: A user-provided list of name-value pairs that describe the invoice
  Tag:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Goldfin.io
  url: 'https://goldfin.io'
