swagger: '2.0'
info:
  description: REST API for Goldfin Intelligent Invoice Processing
  version: 1.0.0
  title: Goldfin Service API
  termsOfService: 'http://goldfin.io/terms/'
  contact:
    email: info@goldfin.io
host: api.goldfin.io
basePath: /api/v1
tags:
  - name: security
    description: Session login and logout
  - name: tenant
    description: Tenant management
  - name: user
    description: User management
  - name: document
    description: Source documents that feed to invoice OCR
  - name: data
    description: Observed data that feed to inventory generation
  - name: vendor
    description: Vendor management and analysis
  - name: invoice
    description: Invoice management and analysis
  - name: inventory
    description: Inventory management and anaysis
  - name: extract
    description: Tabular reports that can be downloaded as CSV
schemes:
  - https
securityDefinitions:
  SessionKey:
    type: apiKey
    in: header
    name: vnd.io.goldfin.session
  ApiKey:
    type: apiKey
    in: header
    name: vnd.io.goldfin.apikey
security:
  - SessionKey: []
  - ApiKey: []
paths:
  /session:
    post:
      tags:
        - security
      summary: Login to system
      security: []
      description: Obtain API key using login credentials
      operationId: loginByCredentials
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Login credentials
          required: true
          schema:
            $ref: '#/definitions/LoginCredentials'
      responses:
        '200':
          description: OK
          headers:
            vnd-io-goldfin-auth:
              type: string
              description: >-
                Session key, should be submitted on future requests to show
                authorization
        '400':
          description: Bad input
          schema:
            $ref: '#/definitions/ApiResponse'
  '/session/{token}':
    delete:
      tags:
        - security
      summary: Logout from system
      description: 'Delete session, which is no longer usable after this call'
      operationId: logout
      produces:
        - application/json
      parameters:
        - name: token
          in: path
          description: Session ID token
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  /tenant:
    post:
      tags:
        - tenant
      summary: Create a new tenant
      description: Upload a new tenant registration request.
      operationId: tenantCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Tenant creation parameters
          required: true
          schema:
            $ref: '#/definitions/TenantParameters'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Tenant'
        '400':
          description: Tenant creation failed
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      tags:
        - tenant
      summary: List tenants
      description: Return a list of all tenants
      operationId: tenantShowall
      produces:
        - application/json
      responses:
        '200':
          description: Successful query
          schema:
            items:
              $ref: '#/definitions/Tenant'
  '/tenant/{id}':
    get:
      tags:
        - tenant
      summary: Show a single tenant
      description: Return all information relative to a single tenant
      operationId: tenantShow
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Tenant'
        '404':
          description: Not Found
    put:
      tags:
        - tenant
      summary: Update a tenant
      description: Update invoice description and tags. Changes to other fields are ignored
      operationId: tenantUpdate
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          type: string
        - name: body
          in: body
          description: Tenant parameters
          schema:
            $ref: '#/definitions/TenantParameters'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    delete:
      tags:
        - tenant
      summary: Delete a tenant
      description: Delete a single tenant
      operationId: tenantDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Tenant ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  /user:
    post:
      tags:
        - user
      summary: Create a new user for a tenant
      description: Upload a new user registration request.
      operationId: userCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User registration request parameters
          required: true
          schema:
            $ref: '#/definitions/UserParameters'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/User'
        '400':
          description: User creation failed
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      tags:
        - user
      summary: List users
      description: Return a list of all users visible to current user
      operationId: userShowall
      produces:
        - application/json
      responses:
        '200':
          description: Successful query
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  '/user/{id}':
    get:
      tags:
        - user
      summary: Show a single user
      description: Return all information relative to a single user
      operationId: userShow
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Tenant'
        '404':
          description: Not Found
    put:
      tags:
        - user
      summary: Update a user
      description: Update user description
      operationId: userUpdate
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
        - name: body
          in: body
          description: User parameters
          schema:
            $ref: '#/definitions/UserParameters'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    delete:
      tags:
        - user
      summary: Delete a user
      description: Delete a user
      operationId: userDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  '/user/{id}/password':
    put:
      tags:
        - user
      summary: Update user password
      description: Sets a new user password
      operationId: userUpdatePassword
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
        - name: body
          in: body
          description: Password change parameters
          schema:
            $ref: '#/definitions/UserPasswordParameters'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  '/user/{id}/apikey':
    post:
      tags:
        - user
      summary: Create a new API key
      description: Create a new API key that can be used for application access.
      operationId: apikeyCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
        - name: body
          in: body
          description: 'API Key parameters, including name of key.'
          schema:
            $ref: '#/definitions/ApiKeyParameters'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ApiKey'
    get:
      tags:
        - user
      summary: Return list of API keys
      description: Return a list of API keys.  Secrets are not shown.
      operationId: apikeyShowAll
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
      responses:
        '200':
          description: Successful query
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiKey'
  '/user/{id}/apikey/{keyid}':
    delete:
      tags:
        - user
      summary: Delete an API key
      description: >-
        Deletes API key.  Any applications using the key will no longer
        function.
      operationId: apikeyDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
        - name: keyid
          in: path
          description: API Key ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  /vendor:
    post:
      tags:
        - vendor
      summary: Create a new vendor
      description: >-
        Upload a new vendor definition.  Vendors are also created automatically
        if a vendor invoice is processed.
      operationId: vendorCreate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Vendor registration request parameters
          required: true
          schema:
            $ref: '#/definitions/VendorParameters'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Vendor'
        '400':
          description: Vendor creation failed
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      tags:
        - vendor
      summary: List vendors
      description: Return a list of all vendors
      operationId: vendorShowall
      produces:
        - application/json
      responses:
        '200':
          description: Successful query
          schema:
            items:
              $ref: '#/definitions/Vendor'
  '/vendor/{id}':
    get:
      tags:
        - vendor
      summary: Show a single vendor
      description: Return all information relative to a single vendor
      operationId: vendorShow
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Vendor ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Vendor'
        '404':
          description: Not Found
    put:
      tags:
        - vendor
      summary: Update a vendor
      description: Update vendor description.
      operationId: vendorUpdate
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: Vendor ID
          required: true
          type: string
        - name: body
          in: body
          description: Vendor parameters
          schema:
            $ref: '#/definitions/VendorParameters'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    delete:
      tags:
        - vendor
      summary: Delete a vendor
      description: >-
        Delete a single vendor.  This can only be done if the vendor is not
        attached to invoices or existing inventory.
      operationId: vendorDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: vendor ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '400':
          description: Invalid Request
        '404':
          description: Not Found
  /invoice:
    get:
      tags:
        - invoice
      summary: List invoices
      description: Return a list of all invoices
      operationId: invoiceShowAll
      produces:
        - application/json
      parameters:
        - name: full
          in: query
          description: 'If true, return full invoices with all line items'
          type: boolean
      responses:
        '200':
          description: Successful query
          schema:
            type: array
            items:
              $ref: '#/definitions/Invoice'
  '/invoice/{id}':
    get:
      tags:
        - invoice
      summary: Show a single invoice
      description: Return all information relative to a single invoice
      operationId: invoiceShow
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Invoice ID
          required: true
          type: string
        - name: full
          in: query
          description: 'If true, return full invoices with all line items'
          type: boolean
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Invoice'
        '404':
          description: Not Found
    delete:
      tags:
        - invoice
      summary: Delete an invoice
      description: >-
        Delete an invoice.  It can be recreated by rescanning the corresponding
        document
      operationId: invoiceDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Invoice ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  '/invoice/{id}/download':
    get:
      tags:
        - invoice
      summary: Download invoice document
      description: Download invoice document
      operationId: invoiceDownload
      produces:
        - application/pdf
        - application/octet-stream
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          type: string
      responses:
        '200':
          description: Successful query
          schema:
            type: file
        '404':
          description: Not Found
  '/invoice/{id}/validate':
    post:
      tags:
        - invoice
      summary: Start invoice validations
      description: Run invoice validations
      operationId: invoiceValidate
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Invoice ID
          required: true
          type: string
        - name: onlyFailing
          in: query
          description: >-
            If true, return only failing checks. Otherwise return all results
            including checks that succeed
          type: boolean
          default: false
      responses:
        '200':
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/InvoiceValidationResult'
        '404':
          description: Not Found
  /document:
    post:
      tags:
        - document
      summary: Upload document
      description: Upload a new document for scanning
      operationId: documentCreate
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: description
          in: formData
          description: An optional description of the document
          type: string
        - name: tags
          in: formData
          description: >-
            Optional tags that apply to this document passed as a JSON string
            containing name-value pairs.
          type: string
        - name: process
          in: formData
          description: Optional flag to kick off scanning automatically if true
          type: boolean
          default: true
        - name: file
          in: formData
          description: Document file
          required: true
          type: file
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Document'
        '400':
          description: Invoice creation failed
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      tags:
        - document
      summary: List documents
      description: Return a list of all documents
      operationId: documentShowAll
      produces:
        - application/json
      responses:
        '200':
          description: Successful query
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
  '/document/{id}':
    get:
      tags:
        - document
      summary: Return document metadata
      description: Download document metadata without content
      operationId: documentShow
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Document'
        '404':
          description: Not Found
    put:
      tags:
        - document
      summary: Update a document
      description: >-
        Update document description and/or tags. Tags do not propagate to
        already scanned invoices but will apply to new ones.
      operationId: documentUpdate
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          type: string
        - name: body
          in: body
          description: Document parameters
          schema:
            $ref: '#/definitions/DocumentParameters'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    delete:
      tags:
        - document
      summary: Delete a invoice
      description: Delete a single document and associated semantic content
      operationId: documentDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Invoice ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  '/document/{id}/download':
    get:
      tags:
        - document
      summary: Download content
      description: Download document content
      operationId: documentDownload
      produces:
        - application/pdf
        - application/octet-stream
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          type: string
      responses:
        '200':
          description: Successful query
          schema:
            type: file
        '404':
          description: Not Found
  '/document/{id}/process':
    post:
      tags:
        - document
      summary: Kick off document analysis
      description: >-
        Run background scanning on document.  The document state and semantic
        information will be updated when finished.
      operationId: documentProcess
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Document ID
          required: true
          type: string
      responses:
        '202':
          description: Accepted
        '404':
          description: Not Found
  /data:
    post:
      tags:
        - data
      summary: Upload data series
      description: Upload data series in a file for analysis
      operationId: dataCreate
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: description
          in: formData
          description: An optional description of the data series
          type: string
        - name: tags
          in: formData
          description: >-
            Optional tags that apply to this entity passed as a JSON string
            containing name-value pairs.
          type: string
        - name: process
          in: formData
          description: Optional flag to kick off processing automatically if true
          type: boolean
          default: true
        - name: file
          in: formData
          description: Data series content
          required: true
          type: file
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/DataSeries'
        '400':
          description: Creation failed
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      tags:
        - data
      summary: List data serties
      description: Return a list of metadata entries for all data series
      operationId: dataShowAll
      produces:
        - application/json
      responses:
        '200':
          description: Successful query
          schema:
            type: array
            items:
              $ref: '#/definitions/DataSeries'
  '/data/{id}':
    get:
      tags:
        - data
      summary: Return data series metadata
      description: Download data series metadata without content
      operationId: dataShow
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Series ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/DataSeries'
        '404':
          description: Not Found
    put:
      tags:
        - data
      summary: Update a data series
      description: >-
        Update data series description and/or tags.  Other fields are ignored if
        included in the body.
      operationId: dataUpdate
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: Data series ID
          required: true
          type: string
        - name: body
          in: body
          description: Data series parameters
          schema:
            $ref: '#/definitions/DataSeries'
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
    delete:
      tags:
        - data
      summary: Delete a data series
      description: Delete a data series and any derived information
      operationId: dataDelete
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Series ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  '/data/{id}/content':
    get:
      tags:
        - data
      summary: Return data series content
      description: Download data series content
      operationId: dataShowContent
      produces:
        - application/octet-stream
      parameters:
        - name: id
          in: path
          description: Series ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  '/data/{id}/process':
    post:
      tags:
        - data
      summary: Kick off background processing of data series
      description: >-
        Run background processing of data series, which may generate one or more
        inventory records.
      operationId: dataProcess
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Series ID
          required: true
          type: string
      responses:
        '202':
          description: Accepted
        '404':
          description: Not Found
  /host:
    get:
      tags:
        - inventory
      summary: List current host inventory records
      description: >-
        Return a list of current hosts in inventory.  This returns the most
        recent record for each host.
      operationId: hostShowAll
      produces:
        - application/json
      responses:
        '200':
          description: Successful query
          schema:
            type: array
            items:
              $ref: '#/definitions/Host'
  '/host/{id}':
    get:
      tags:
        - inventory
      summary: Show single host inventory record
      description: >-
        Returns the most recent inventory record for a specific host.  The host
        must be identified by the resource ID or internal ID
      operationId: hostShow
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: Host resource ID
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Host'
        '404':
          description: Not Found
    delete:
      tags:
        - inventory
      summary: Delete host record
      description: >-
        Delete a host record.  It can be recreated by rescanning the
        corresponding document
      operationId: hostDelete
      parameters:
        - name: id
          in: path
          description: Invoice ID
          required: true
          type: string
      responses:
        '200':
          description: Successful
        '404':
          description: Not Found
  /extract/download:
    get:
      tags:
        - extract
      summary: Download a data extract
      description: >-
        Extract data for a particular extract type, where these correspond to
        schema types as well as  reports that join data from multiple schema
        types
      operationId: extractDownload
      produces:
        - text/csv
        - text/json
      parameters:
        - name: extractType
          in: query
          description: Name of the extract type
          type: string
          required: true
        - name: filter
          in: query
          description: >-
            A query string that specifies extract content.  If omitted all
            entities are selected.
          type: string
        - name: limit
          in: query
          description: >-
            Maximum number of entities to return
          type: integer
        - name: order
          in: query
          description: >-
            A comma-separated list of order by columns of the form name1[:asc|desc],name2[:asc|desc],...  If sort order is omitted it defaults to asc (ascending).
          type: string
        - name: output
          in: query
          description: Selects the extract output type. Currently only CSV is supported.
          type: string
      responses:
        '200':
          description: Successful query
          schema:
            type: file
        '400':
          description: Input error
  /extract/types:
    get:
      tags:
        - extract
      summary: List available extract types
      description: Return a list of available extrac types
      operationId: extractTypes
      produces:
        - application/json
      responses:
        '200':
          description: Successful query
          schema:
            type: array
            items:
              type: string
definitions:
  LoginCredentials:
    description: Login credentials
    properties:
      user:
        type: string
        description: User name in form 'username@tenantname'
      password:
        type: string
        description: User password
  Tenant:
    description: Tenant description
    properties:
      id:
        type: string
        format: uuid
        description: Unique tenant id
      name:
        type: string
        description: Unique tenant name
      schema_suffix:
        type: string
        description: Tenant schema suffix
      description:
        type: string
        description: Optional information about the tenant
      state:
        description: 'The current processing state of the tenant. '
        enum:
          - PENDING
          - ENABLED
          - DISABLED
      creationDate:
        type: string
        description: Date record was created
  TenantParameters:
    description: Parameters for creating or updating a tenant
    properties:
      name:
        type: string
        description: Unique tenant name
      schema_suffix:
        type: string
        description: Tenant schema suffix
      description:
        type: string
        description: Optional information about the tenant
  User:
    description: User description
    properties:
      id:
        type: string
        format: uuid
        description: Unique user id
      tenantId:
        type: string
        format: uuid
        description: Tenant ID
      username:
        type: string
        description: Unique user name
      roles:
        type: string
        description: Comma-separated list of user roles
      creationDate:
        type: string
        description: Date user record was created
  UserParameters:
    description: Parameters for creating or updating a user account
    properties:
      user:
        type: string
        description: Unique user name in form 'username@tenantname'
      initialPassword:
        type: string
        description: Initial user password; ignored after creation
      roles:
        type: string
        description: Comma-separated list of user roles
  UserPasswordParameters:
    description: Parameters to change a user password
    properties:
      oldPassword:
        type: string
        description: Existing user password.  Required to change user password.
      newPassword:
        type: string
        description: New user password.
  ApiKey:
    description: API key pair
    properties:
      id:
        type: string
        format: uuid
        description: Unique API key ID
      name:
        type: string
        description: Name of this API key; must be unique among keys owned by a user.
      userId:
        type: string
        format: uuid
        description: User ID
      secret:
        type: string
        description: >-
          Secret password for the API key. This is only shown on initial
          creation; if lost a new API key must be created to replace it.
      lastTouchedDate:
        type: string
        format: date-time
        description: Date of last use of key
  ApiKeyParameters:
    description: Parameters to create a new API Key
    properties:
      name:
        type: string
        description: Name of this API key; must be unique among keys owned by a user.
  Vendor:
    description: Vendor description
    properties:
      id:
        type: string
        format: uuid
        description: Unique vendor id
      identifier:
        type: string
        description: Standard key used to describe vendor for accounting purposes
      name:
        type: string
        description: Vendor display name
      state:
        description: >-
          Current state of the vendor.  Active vendors have current inventory
          and invoices.
        enum:
          - ACTIVE
          - INACTIVE
      tags:
        $ref: '#/definitions/TagSet'
      creationDate:
        type: string
        description: Date record was created
  VendorParameters:
    description: Parameters used for vendor creation or update requests
    properties:
      identifier:
        type: string
        description: Key used to describe vendor for accounting purposes
      name:
        type: string
        description: Vendor name
      state:
        description: >-
          Current state of the vendor.  Active vendors have current inventory
          and invoices.
        enum:
          - ACTIVE
          - INACTIVE
      tags:
        $ref: '#/definitions/TagSet'
  Document:
    description: 'A document, for example a PDF file containing an invoice'
    type: object
    properties:
      id:
        type: string
        description: Document ID
        format: uuid
      name:
        type: string
        description: Name of the document
      description:
        type: string
        description: Optional description of the document
      contentType:
        type: string
        description: 'Internet media type (e.g., application/octet-stream)'
      contentLength:
        type: number
        format: int64
        description: Document length in bytes
      thumbprint:
        type: string
        description: SHA-256 thumbprint of document content
      locator:
        type: string
        format: url
        description: Storage locator of the document
      state:
        description: >-
          The current processing state of the document.  The document type and
          content ID are available after scanning
        enum:
          - CREATED
          - SCAN_REQUESTED
          - SCANNED
          - ERROR
      semanticType:
        description: 'Kind of document, e.g., an invoice.'
        enum:
          - INVOICE
          - UNKNOWN
      semanticId:
        type: string
        description: 'ID of the document''s scanned content, e.g. an invoice ID'
        format: uuid
      tags:
        $ref: '#/definitions/TagSet'
      creationDate:
        type: string
        description: Date document was uploaded
  DocumentParameters:
    description: User settable document parameters
    type: object
    properties:
      description:
        type: string
        description: Optional description of the document
      tags:
        $ref: '#/definitions/TagSet'
  DocumentRegion:
    description: >-
      Location within a document page expressed in page number and pixel region
      coordinates on the page
    type: object
    properties:
      documentId:
        type: string
        format: uuid
        description: Document ID
      page:
        type: integer
        format: int32
        description: Page number
      left:
        type: integer
        format: int32
        description: Left pixel coordinate
      top:
        type: integer
        format: int32
        description: Top pixel coordinate
      right:
        type: integer
        format: int32
        description: Right pixel coordinate
      bottom:
        type: integer
        format: int32
        description: Bottom pixel coordinate
  Invoice:
    description: Invoice content obtained from document scanning
    properties:
      id:
        type: string
        format: uuid
        description: Invoice ID
      documentId:
        type: string
        format: uuid
        description: Source document ID
      description:
        type: string
        description: A user-provided description of the invoice
      identifier:
        type: string
        description: Invoice identifier
      account:
        type: string
        description: Account to which invoice applies
      effectiveDate:
        type: string
        format: date-time
        description: Invoice effective date
      vendorIdentifier:
        type: string
        description: Vendor identifier
      subtotalAmount:
        type: number
        description: Invoice subtotal amount
      credit:
        type: number
        description: Invoice total credits
      tax:
        type: number
        description: Invoice tax amount
      totalAmount:
        type: number
        description: Invoice total (subtotal + tax)
      currency:
        type: string
        description: Currency type
      items:
        type: array
        description: Invoice items
        items:
          $ref: '#/definitions/InvoiceItem'
      tags:
        $ref: '#/definitions/TagSet'
      creationDate:
        type: string
        description: Date user record was created
  InvoiceItem:
    description: Common fields for all invoice line items
    type: object
    properties:
      rid:
        type: integer
        description: Row number of line item starting at 1.
      parentRid:
        type: integer
        description: Row ID of a summary invoice item to which this item belongs
      itemRowType:
        type: string
        enum:
          - DETAIL
          - SUMMARY
        description: |
          Type of invoice row item
           * DETAIL - A payable item
           * SUMMARY - A sub-total or total line
      itemId:
        type: string
        description: Invoice item ID if specified
      resourceId:
        type: string
        description: Inventory resource ID
      description:
        type: string
        description: Invoice item description
      unitAmount:
        type: number
        description: Cost per unit
      units:
        type: integer
        description: Number of units
      unitType:
        type: string
        enum:
          - MONTH
          - HOUR
          - USER
          - GB
          - OTHER
        description: |
          Type of multiplier for computing invoice item total
           * MONTH - Monthly subscription (may be prorated depending on vendor)
           * HOUR - Hours in use
           * USER - Number of users
           * GB - Gigabytes (for example as a unit of storage or transfer)
           * OTHER - Some other unit of consumption
      subtotalAmount:
        type: number
        description: Item cost for all units without credits or taxes
      credit:
        type: number
        description: Credit applied to line item
      tax:
        type: number
        description: Tax on line item
      totalAmount:
        type: number
        description: Total cost for all units including taxes and credits
      currency:
        type: string
        description: Item currency
      startDate:
        type: string
        format: date-time
        description: Begining of the time range
      endDate:
        type: string
        format: date-time
        description: End of the time range
      chargeType:
        type: string
        enum:
          - RECURRING
          - ONE-TIME
        description: |
          Type of charge
           * RECURRING - Recurs every interval e.g. monthly
           * ONE_TIME - A one-time charge delivered on starting date
        default: RECURRING
      region:
        $ref: '#/definitions/DocumentRegion'
      inventoryId:
        type: string
        description: Id of an inventory description
      inventoryType:
        type: string
        enum:
          - HOST
      tags:
        $ref: '#/definitions/TagSet'
  InvoiceParameters:
    description: User settable invoice parameters
    properties:
      description:
        type: string
        description: A user-provided description of the invoice
      tags:
        $ref: '#/definitions/TagSet'
  ValidationType:
    type: string
    description: Key describing a specific validation type
    enum: &ref_0
      - INVOICE
      - INVOICE_LINE_ITEM
  InvoiceValidationResult:
    description: An validation result that checks a specific invoice rule
    properties:
      summary:
        type: string
        description: A concise summary of the check
      passed:
        type: boolean
        description: If true the check passed
      validationType:
        type: string
        description: >-
          The type of validation, which can be related to the invoice itself or
          an invoice line item.  In the latter case line item fields are
          included; otherwise line item information is omitted.
        enum: *ref_0
      details:
        type: string
        description: Detailed information about the exception
      invoiceId:
        type: string
        format: uuid
        description: ID of invoice to which discrepancy applies
      identifier:
        type: string
        description: Invoice identifier
      effectiveDate:
        type: string
        format: date-time
        description: Invoice effective date
      vendorIdentifier:
        type: string
        description: Vendor identifier
      invoiceItemId:
        type: string
        description: Invoice line item ID
      invoiceItemResourceId:
        type: string
        description: Invoice line item inventory resource ID
  DataSeries:
    description: A set of one or more observations for analysis
    type: object
    properties:
      id:
        type: string
        description: Series ID
        format: uuid
      name:
        type: string
        description: Name of the source file if known
      description:
        type: string
        description: Optional description of the series
      contentType:
        type: string
        description: 'Internet media type (e.g., application/json)'
      contentLength:
        type: number
        format: int64
        description: Content length in bytes
      thumbprint:
        type: string
        description: SHA-256 thumbprint of content
      locator:
        type: string
        format: url
        description: Storage locator for content
      state:
        description: 'The current processing state of the content.  '
        enum:
          - CREATED
          - PROCESS_REQUESTED
          - PROCESSED
          - ERROR
      format:
        description: 'Kind of data series, e.g., observation'
        enum:
          - OBSERVATION
          - UNKNOWN
      tags:
        $ref: '#/definitions/TagSet'
      creationDate:
        type: string
        description: Date data was uploaded
  Observation:
    description: Generic observation data related to a vendor offering
    type: object
    properties:
      vendorIdentifier:
        type: string
        description: Vendor identifier key
      effectiveDate:
        type: string
        format: date-time
        description: Effective date when observation was made
      nonce:
        type: integer
        format: int64
        description: >-
          A randomly generated integer to help ensure loading is idempotent
          (i.e., can be repeated without generating multiple copies of the same
          observation)
      description:
        type: string
        description: Optional description of observation
      observationType:
        description: 'Kind of observation, e.g., host inventory.'
        enum:
          - HOST_INVENTORY
      data:
        type: string
        description: String containing serialized observation data
      version:
        type: string
        description: Data format version
      tags:
        $ref: '#/definitions/TagSet'
  Result:
    description: Generic result of processing observation data
    type: object
    properties:
      dataSeriesId:
        type: string
        description: Id of data series from which result is derived
        format: uuid
      resultType:
        type: string
        description: Class of result
      data:
        type: string
        description: String containing serialized result data
  Host:
    description: Host record from inventory
    properties:
      id:
        type: string
        description: Host record ID
        format: uuid
      hostId:
        type: string
        description: Internal host ID from vendor used to identify host in inventory
      resourceId:
        type: string
        description: Inventory resource ID that can be related to invoice item resource ID
      effectiveDate:
        type: string
        format: date-time
        description: Observation effective date
      vendorIdentifier:
        type: string
        description: Vendor identifier key
      dataSeriesId:
        type: string
        format: uuid
        description: Id of data series from which this host record was derived
      hostType:
        description: Type of host
        enum:
          - BARE_METAL
          - CLOUD
          - UNKNOWN
      hostModel:
        type: string
        description: Host model or marketing name
      region:
        type: string
        description: Geographic region
      zone:
        type: string
        description: Availability zone
      datacenter:
        type: string
        description: Data center
      cpu:
        type: string
        description: CPU model
      socketCount:
        type: integer
        description: Number of CPU sockets
      coreCount:
        type: integer
        description: Number of cores per socket
      threadCount:
        type: integer
        description: Number of hardware threads per core
      ram:
        type: integer
        format: int64
        description: Size of RAM in bytes
      hdd:
        type: integer
        format: int64
        description: Size of HDD storage in bytes
      ssd:
        type: integer
        format: int64
        description: Size of SSD storage in bytes
      nicCount:
        type: integer
        description: Number of network interface cards (NICs)
      networkTrafficLimit:
        type: integer
        format: int64
        description: >-
          Number of bytes of network traffer per billing period if there is a
          hard limit
      backupEnabled:
        type: boolean
        description: If true backup is enabled for this host
      tags:
        $ref: '#/definitions/TagSet'
  TagSet:
    type: array
    description: >-
      Collection of tags.  If keys are repeated in the array the last value in
      order takes precedences
    items:
      $ref: '#/definitions/Tag'
  Tag:
    type: object
    description: >-
      A key-value pair used to add relevant descriptive information. Tags are
      not interpreted and may contain data like business unit IDs, contract
      names, or other information users find relevant to classify or associate
      the data to which they apply.
    properties:
      name:
        type: string
        description: A user-defined name for the tag
      value:
        type: string
        description: A user-defined value for the tag
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Goldfin.io
  url: 'https://goldfin.io'
